# -*- coding: utf-8 -*-
# Импортируем нужные нам библиотеки
from app import app
from flask import render_template, request
from datetime import datetime
import os

# Эта функция с соб@кой впереди называется декоратор. Она оборачивает следующую за ней функцию оберткой,
# которая выполняет свой какой нить код до и после вызова нашей функции.
# В нашем случае этот декоратор нужен для пути к нашей главной странице с адресом http://адрес-компутера/
@app.route('/')
# А это собственно главная функция, которая и создает главную страницу
def main_url():
    # Она занимается тем, что рисует HTML страничку из файла templates/index.html, добавляя в нее переменные
    return render_template('index.html',
                           # current_time (куда записывается текущее время),
                           current_time = datetime.now(),
                           # name (ну тут понятна все :) )
                           name = 'Соньчоус!',
                           # путь к файлу с картинкой
                           image_path = '/static/images/img.png',
                           # computer (адрес нашего компутера)
                           computer = request.server[0]
                           )
# И снова декоратор, указывающий теперь другой путь, на другую страницу сайта.
@app.route('/my-list')
# и эту страницу создает наша функция my_list (заметь, названия функция и пути к страницам могут быть разными:
# (в пути "-", в функции "_"))
def my_list():
    # тут мы добавим в лог приложения информацию о том, в каком каталоге оно работает
    # Причем это сообщение будет появляться только для уровня логгирования DEBUG (см. __init.py__:13я строка)
    app.logger.debug('Current folder'+ os.path.abspath(os.curdir))

    # А тут сообщим, что хотим открыть файл my-list.txt, который лежит в каталоге с приложением.
    # Это сообщение с уровнем логгирования INFO, и оно будет видно при всех уровнях логгирования, какие бы ни поставили.
    app.logger.info('Открыть файл ./my-list.txt')

    # Откроем уже этот файл. И свяжем с ним переменную file_list
    # флаг (параметр) 'r' значит, что файл будет открыт в режиме readonly, только для чтения
    file_list = open(r'./my-list.txt', 'r')

    # Теперь созданим переменную типа словарь. Запишем в нее первую пару ключ:значение
    dictionary_of_my_list = {'Название': 'Содержание'}

    # Пробежим циклом по всем строкам файла.
    for line in file_list:
        # Каждую строку файла разобьем на две части, разделителем служит символ "-".
        # результат - список из двух текстов - запишем в переменную list_of_items
        list_of_items = line.split('-')
        # И обновим словарь dictionary_of_my_list, записав туда первый текст строки как ключ,
        # Второй - как значение этого ключа
        # В программировании чаще всего счет номеров элементов в списке начинается с 0. Номер 0 - это первый элемент.
        dictionary_of_my_list[list_of_items[0]] = list_of_items[1]
    # А теперь отрисуем страничку и добавим на нее переменную my_list,
    # в которую запишем данные из переменной dictionary_of_my_list
    return render_template('my-list.html', my_list=dictionary_of_my_list)
